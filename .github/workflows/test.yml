name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m pip install -e .[test]

    - name: Verify installation
      run: |
        python -c "import secure_query; print('Package imported successfully')"
        python -c "from secure_query import ensure_keys, get_public_key_pem; print('Functions imported successfully')"

    - name: Run tests
      run: |
        pytest -v --cov=secure_query --cov-report=xml --cov-report=term-missing

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install package and linting tools
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install black isort flake8 mypy

    - name: Check code formatting with black
      run: black --check src/ tests/ --line-length=88 --target-version=py39

    - name: Check import sorting with isort
      run: isort --check-only src/ tests/ --profile=black

    - name: Lint with flake8
      run: flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503

    - name: Type check with mypy
      run: mypy src/secure_query/ --ignore-missing-imports --no-strict-optional

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        pip install -e .

    - name: Check dependencies for security issues
      run: safety check

    - name: Run security linting
      run: bandit -r src/secure_query/